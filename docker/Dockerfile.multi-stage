# Rainbow Backend Multi-Stage Dockerfile
# 作者: jackson.liu
# 版本: 1.0.0
# 说明: 多阶段构建，优化镜像大小

# 第一阶段：构建阶段
FROM maven:3.8-openjdk-8 AS builder

# 设置工作目录
WORKDIR /build

# 复制 pom.xml 文件
COPY pom.xml .
COPY rainbow-base/pom.xml rainbow-base/
COPY rainbow-server/pom.xml rainbow-server/
COPY rainbow-server/rainbow-system/pom.xml rainbow-server/rainbow-system/

# 下载依赖
RUN mvn dependency:go-offline -B

# 复制源代码
COPY rainbow-base/src/ rainbow-base/src/
COPY rainbow-server/src/ rainbow-server/src/

# 构建项目
RUN mvn clean package -Dmaven.test.skip=true -B

# 第二阶段：运行阶段
FROM openjdk:8-jre-alpine AS runtime

# 设置维护者信息
LABEL maintainer="jackson.liu <junsheng100@foxmail.com>"
LABEL description="Rainbow Backend - 企业级后端系统"
LABEL version="1.0.0"

# 设置工作目录
WORKDIR /app

# 设置时区为中国时区
RUN apk add --no-cache tzdata && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone && \
    apk del tzdata

# 创建应用用户
RUN addgroup -g 1000 rainbow && \
    adduser -D -s /bin/sh -u 1000 -G rainbow rainbow

# 创建必要的目录
RUN mkdir -p /app/logs /app/upload /app/config && \
    chown -R rainbow:rainbow /app

# 从构建阶段复制 JAR 文件
COPY --from=builder /build/rainbow-server/rainbow-system/target/rainbow-system.jar app.jar

# 设置文件权限
RUN chown rainbow:rainbow app.jar && \
    chmod +x app.jar

# 切换到应用用户
USER rainbow

# 暴露端口
EXPOSE 8080

# 设置 JVM 参数
ENV JAVA_OPTS="-Xms512m -Xmx1024m -XX:+UseG1GC -XX:MaxGCPauseMillis=200"

# 设置应用参数
ENV SPRING_PROFILES_ACTIVE=prod
ENV SERVER_PORT=8080

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1

# 启动命令
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar --spring.profiles.active=$SPRING_PROFILES_ACTIVE --server.port=$SERVER_PORT"]
